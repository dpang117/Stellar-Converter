import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import '../services/currency_service.dart';

class CryptoIcon extends StatelessWidget {
  final String symbol;
  final double size;
  final Color? backgroundColor;

  // Map of fiat currency codes to their flag emojis
  static const Map<String, String> fiatFlags = {
    'USD': 'ðŸ‡ºðŸ‡¸',
    'EUR': 'ðŸ‡ªðŸ‡º',
    'GBP': 'ðŸ‡¬ðŸ‡§',
    'JPY': 'ðŸ‡¯ðŸ‡µ',
    'CAD': 'ðŸ‡¨ðŸ‡¦',
    'AUD': 'ðŸ‡¦ðŸ‡º',
    'CHF': 'ðŸ‡¨ðŸ‡­',
    'CNY': 'ðŸ‡¨ðŸ‡³',
    'HKD': 'ðŸ‡­ðŸ‡°',
    'NZD': 'ðŸ‡³ðŸ‡¿',
    'SGD': 'ðŸ‡¸ðŸ‡¬',
    'ZAR': 'ðŸ‡¿ðŸ‡¦',
    'INR': 'ðŸ‡®ðŸ‡³',
    'BRL': 'ðŸ‡§ðŸ‡·',
    'RUB': 'ðŸ‡·ðŸ‡º',
    'AED': 'ðŸ‡¦ðŸ‡ª',
    'TWD': 'ðŸ‡¹ðŸ‡¼',
    'KRW': 'ðŸ‡°ðŸ‡·',
    'MXN': 'ðŸ‡²ðŸ‡½',
    'SAR': 'ðŸ‡¸ðŸ‡¦',
    'PLN': 'ðŸ‡µðŸ‡±',
    'DKK': 'ðŸ‡©ðŸ‡°',
    'SEK': 'ðŸ‡¸ðŸ‡ª',
    'NOK': 'ðŸ‡³ðŸ‡´',
    'THB': 'ðŸ‡¹ðŸ‡­',
    'ILS': 'ðŸ‡®ðŸ‡±',
    'QAR': 'ðŸ‡¶ðŸ‡¦',
    'KWD': 'ðŸ‡°ðŸ‡¼',
    'PHP': 'ðŸ‡µðŸ‡­',
    'TRY': 'ðŸ‡¹ðŸ‡·',
    'CZK': 'ðŸ‡¨ðŸ‡¿',
    'IDR': 'ðŸ‡®ðŸ‡©',
    'MYR': 'ðŸ‡²ðŸ‡¾',
    'HUF': 'ðŸ‡­ðŸ‡º',
    'VND': 'ðŸ‡»ðŸ‡³',
    'ISK': 'ðŸ‡®ðŸ‡¸',
    'RON': 'ðŸ‡·ðŸ‡´',
    'HRK': 'ðŸ‡­ðŸ‡·',
    'BGN': 'ðŸ‡§ðŸ‡¬',
    'UAH': 'ðŸ‡ºðŸ‡¦',
    'UYU': 'ðŸ‡ºðŸ‡¾',
    'ARS': 'ðŸ‡¦ðŸ‡·',
    'COP': 'ðŸ‡¨ðŸ‡´',
    'CLP': 'ðŸ‡¨ðŸ‡±',
    'PEN': 'ðŸ‡µðŸ‡ª',
    'MAD': 'ðŸ‡²ðŸ‡¦',
    'NGN': 'ðŸ‡³ðŸ‡¬',
    'KES': 'ðŸ‡°ðŸ‡ª',
    'DZD': 'ðŸ‡©ðŸ‡¿',
    'EGP': 'ðŸ‡ªðŸ‡¬',
    'BDT': 'ðŸ‡§ðŸ‡©',
    'PKR': 'ðŸ‡µðŸ‡°',
    'VEF': 'ðŸ‡»ðŸ‡ª',
    'IRR': 'ðŸ‡®ðŸ‡·',
    'JOD': 'ðŸ‡¯ðŸ‡´',
    'NPR': 'ðŸ‡³ðŸ‡µ',
    'LKR': 'ðŸ‡±ðŸ‡°',
    'OMR': 'ðŸ‡´ðŸ‡²',
    'MMK': 'ðŸ‡²ðŸ‡²',
    'BHD': 'ðŸ‡§ðŸ‡­',
  };

  const CryptoIcon({
    Key? key,
    required this.symbol,
    this.size = 48,
    this.backgroundColor,
  }) : super(key: key);

  Widget _buildIcon() {
    final isCrypto = CurrencyService.cryptoCurrencies.contains(symbol);
    
    if (isCrypto) {
      return Container(
        width: size,
        height: size,
        child: SvgPicture.asset(
          'assets/crypto_icons/${symbol.toLowerCase()}.svg',
          placeholderBuilder: (context) => Center(
            child: Text(
              symbol[0],
              style: TextStyle(
                color: Colors.white,
                fontSize: size * 0.5,
                fontWeight: FontWeight.bold,
              ),
            ),
          ),
          errorBuilder: (context, error, stackTrace) => Center(
            child: Text(
              symbol[0],
              style: TextStyle(
                color: Colors.white,
                fontSize: size * 0.5,
                fontWeight: FontWeight.bold,
              ),
            ),
          ),
        ),
      );
    } else {
      return Container(
        width: size,
        height: size,
        decoration: BoxDecoration(
          color: Colors.white24,
          shape: BoxShape.circle,
        ),
        child: Center(
          child: Text(
            fiatFlags[symbol] ?? symbol[0],
            style: TextStyle(fontSize: size * 0.8),
          ),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      width: size,
      height: size,
      decoration: BoxDecoration(
        color: CurrencyService.cryptoCurrencies.contains(symbol) 
          ? (backgroundColor ?? Colors.orange) 
          : Colors.transparent,
        shape: BoxShape.circle,
      ),
      child: _buildIcon(),
    );
  }
} 